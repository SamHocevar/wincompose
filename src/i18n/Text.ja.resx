<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutodetectLanguage" xml:space="preserve">
    <value>自動検出</value>
  </data>
  <data name="KeyLMenu" xml:space="preserve">
    <value>左Alt</value>
  </data>
  <data name="KeyRMenu" xml:space="preserve">
    <value>右Alt</value>
  </data>
  <data name="KeyLControl" xml:space="preserve">
    <value>左Control</value>
  </data>
  <data name="KeyRControl" xml:space="preserve">
    <value>右Control</value>
  </data>
  <data name="KeyLWin" xml:space="preserve">
    <value>左Windows</value>
  </data>
  <data name="KeyRWin" xml:space="preserve">
    <value>右Windows</value>
  </data>
  <data name="KeyCapital" xml:space="preserve">
    <value>Caps Lock</value>
  </data>
  <data name="KeyNumLock" xml:space="preserve">
    <value>Num Lock</value>
  </data>
  <data name="KeyPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="KeyApps" xml:space="preserve">
    <value>アプリケーション</value>
  </data>
  <data name="KeyEscape" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="KeyScroll" xml:space="preserve">
    <value>Scroll Lock</value>
  </data>
  <data name="KeySpace" xml:space="preserve">
    <value>スペース</value>
  </data>
  <data name="KeyReturn" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ShowSequences" xml:space="preserve">
    <value>シーケンスを表示…</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>無効にする</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>再起動</value>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>ウェブサイトを表示</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="Sequences" xml:space="preserve">
    <value>シーケンス</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索フィルタ:</value>
  </data>
  <data name="ComposeKey" xml:space="preserve">
    <value>Composeキー:</value>
  </data>
  <data name="ComposeKeyToolTip" xml:space="preserve">
    <value>Composeキーとなるキーを指定してください。</value>
  </data>
  <data name="ResetDelay" xml:space="preserve">
    <value>遅延:</value>
  </data>
  <data name="UnicodeInput" xml:space="preserve">
    <value>上級者向けUnicode入力</value>
  </data>
  <data name="UnicodeInputToolTip" xml:space="preserve">
    <value>Composeキーシーケンスが指定されていないUnicode文字にも入力を有効にする。たとえば、Compose U 1 A 3 Fというシーケンスを入力すると、U+1A3F が出力される</value>
  </data>
  <data name="InvalidSequences" xml:space="preserve">
    <value>無効な入力時</value>
  </data>
  <data name="CaseInsensitive" xml:space="preserve">
    <value>大文字小文字のみが異なるものがある場合は、それを使用する</value>
  </data>
  <data name="CaseInsensitiveToolTip" xml:space="preserve">
    <value>入力したシーケンスが存在しないが、それと大文字小文字だけが異なるものが存在する場合、自動修正する。</value>
  </data>
  <data name="DiscardOnInvalid" xml:space="preserve">
    <value>入力した文字を捨てる</value>
  </data>
  <data name="DiscardOnInvalidToolTip" xml:space="preserve">
    <value>入力したシーケンスが存在しない場合、すべての入力を破棄する。デフォルトでは、入力された文字を、Composeキーが押されなかった時のように出力する。</value>
  </data>
  <data name="BeepOnInvalid" xml:space="preserve">
    <value>ビープ音を鳴らす</value>
  </data>
  <data name="BeepOnInvalidToolTip" xml:space="preserve">
    <value>入力したシーケンスが存在しない場合、システム音を鳴らす。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>表示言語:</value>
  </data>
  <data name="LanguageToolTip" xml:space="preserve">
    <value>WinComposeがインターフェースに使う言語を選んでください。デフォルトでは、システムの言語を使います。</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="KeepOriginalKey" xml:space="preserve">
    <value>もとのComposeキーの動作を保つ</value>
  </data>
  <data name="KeepOriginalKeyToolTip" xml:space="preserve">
    <value>これを選択すると、WinComposeはもとの挙動をできるだけ保とうとします。たとえば、AltキーをComposeキーに指定した場合でも、Alt-Tabショートカットは従来通りの動作をします。</value>
  </data>
  <data name="InsertZwsp" xml:space="preserve">
    <value>Officeアプリ使用時ゼロ幅スペースを挿入する</value>
  </data>
  <data name="InsertZwspToolTip" xml:space="preserve">
    <value>Microsoft Officeのアプリケーションは、特定のUnicode文字を入力したときに、文書のフォントをフォントを変えてしまうバグがあります。この機能は、Unicode文字の後に、不可視スペースを挿入して、そのバグを回避します。</value>
  </data>
  <data name="EmulateCapsLock" xml:space="preserve">
    <value>両方のShiftキー押下でCaps Lockの代わりにする</value>
  </data>
  <data name="EmulateCapsLockToolTip" xml:space="preserve">
    <value>Caps LockをComposeキーに指定した場合、元の挙動は使うことできません。この機能は、両方のShiftを同時に押すことで、Caps LockをOnにすることができます。</value>
  </data>
  <data name="ShiftDisablesCapsLock" xml:space="preserve">
    <value>Shiftキーを押した時にはCaps Lockを無効にする</value>
  </data>
  <data name="ShiftDisablesCapsLockToolTip" xml:space="preserve">
    <value>Caps LockをComposeキーに指定した場合、元の挙動は使用できません。この機能は、Shiftキーを押すことでCaps LockをOffにすることができます。</value>
  </data>
  <data name="CapsLockCapitalizes" xml:space="preserve">
    <value>Caps Lockがオンの時は、常に大文字にする</value>
  </data>
  <data name="CapsLockCapitalizesToolTip" xml:space="preserve">
    <value>Caps Lockがオンの時、“é”のようなアクセント付き文字を打ったとき、常に対応する大文字 (この場合は “É”) を出力する。</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="InSelectedCategories" xml:space="preserve">
    <value>選択されたカテゴリ内を選択</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>設定 — WinCompose</value>
  </data>
  <data name="ShowOptions" xml:space="preserve">
    <value>設定…</value>
  </data>
  <data name="TrayToolTip" xml:space="preserve">
    <value>WinCompose v{2} on {0} ({1} 個のシーケンス)</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>シーケンス — WinCompose</value>
  </data>
  <data name="UserMacros" xml:space="preserve">
    <value>ユーザー定義マクロ</value>
  </data>
  <data name="DisabledToolTip" xml:space="preserve">
    <value>WinComposeは無効です</value>
  </data>
  <data name="KeyInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="TestTyping" xml:space="preserve">
    <value>ためしてみる</value>
  </data>
  <data name="Tweaks" xml:space="preserve">
    <value>細かい設定</value>
  </data>
  <data name="Milliseconds" xml:space="preserve">
    <value>(ミリ秒)</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>WinCompose について</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>WinComposeのダウンロード {0}</value>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>WinCompose について</value>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>プログラミング</value>
  </data>
  <data name="Translators" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>スペシャルサンクス</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>ライセンス</value>
  </data>
  <data name="NeedRestart" xml:space="preserve">
    <value>設定によっては、WinComposeを再起動しないと反映されないものもあります。</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>バグ報告</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="UpdatesToolTip" xml:space="preserve">
    <value>アップデートがあります。</value>
  </data>
  <data name="UserDefinedSequences" xml:space="preserve">
    <value>ユーザー定義シーケンス</value>
  </data>
</root>
