<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutodetectLanguage" xml:space="preserve">
    <value>自動偵測</value>
  </data>
  <data name="KeyLMenu" xml:space="preserve">
    <value>左 Alt</value>
  </data>
  <data name="KeyRMenu" xml:space="preserve">
    <value>右 Alt</value>
  </data>
  <data name="KeyLControl" xml:space="preserve">
    <value>左 Control</value>
  </data>
  <data name="KeyRControl" xml:space="preserve">
    <value>右 Contriol</value>
  </data>
  <data name="KeyLWin" xml:space="preserve">
    <value>左 Win</value>
  </data>
  <data name="KeyRWin" xml:space="preserve">
    <value>右 Win</value>
  </data>
  <data name="KeyCapital" xml:space="preserve">
    <value>Caps Lock</value>
  </data>
  <data name="KeyNumLock" xml:space="preserve">
    <value>Num Lock</value>
  </data>
  <data name="KeyPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="KeyApps" xml:space="preserve">
    <value>功能表鍵</value>
  </data>
  <data name="KeyEscape" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="KeyScroll" xml:space="preserve">
    <value>Scroll Lock</value>
  </data>
  <data name="KeySpace" xml:space="preserve">
    <value>空間鍵</value>
  </data>
  <data name="KeyReturn" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="ShowSequences" xml:space="preserve">
    <value>顯示按鍵系列…</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>停用</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>重新啟動</value>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>拜訪網站</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>結束</value>
  </data>
  <data name="Sequences" xml:space="preserve">
    <value>按鍵系列</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜尋篩選器:</value>
  </data>
  <data name="ComposeKey" xml:space="preserve">
    <value>前導鍵:</value>
  </data>
  <data name="ComposeKeyToolTip" xml:space="preserve">
    <value>選擇作為前導鍵的鍵。</value>
  </data>
  <data name="ResetDelay" xml:space="preserve">
    <value>延遲:</value>
  </data>
  <data name="UnicodeInput" xml:space="preserve">
    <value>進階萬國碼輸入</value>
  </data>
  <data name="UnicodeInputToolTip" xml:space="preserve">
    <value>啟用所有字元的萬國碼輸入，包括未曾定義按鍵系列的字元。例如後面系列會輸出 U+1A3F 字元: 前導鍵 U 1 A 3 F</value>
  </data>
  <data name="InvalidSequences" xml:space="preserve">
    <value>出現無效按鍵系列時</value>
  </data>
  <data name="CaseInsensitive" xml:space="preserve">
    <value>取用忽略大小寫後相合的按鍵系列</value>
  </data>
  <data name="CaseInsensitiveToolTip" xml:space="preserve">
    <value>若輸入的按鍵系列不存在，且此系列與另一系列僅有大小寫差異，自動修正之。</value>
  </data>
  <data name="DiscardOnInvalid" xml:space="preserve">
    <value>丟棄所有輸入的字元</value>
  </data>
  <data name="DiscardOnInvalidToolTip" xml:space="preserve">
    <value>若輸入的按鍵系列不存在，丟棄所有輸入的字元。預設的運作是，像未曾按過前導鍵那樣輸出字元。</value>
  </data>
  <data name="BeepOnInvalid" xml:space="preserve">
    <value>發出嗶聲</value>
  </data>
  <data name="BeepOnInvalidToolTip" xml:space="preserve">
    <value>若輸入的按鍵系列不存在，發出系統的嗶聲。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>介面語言:</value>
  </data>
  <data name="LanguageToolTip" xml:space="preserve">
    <value>選擇 WinCompose 介面的語言。預設使用作業系統的語言。</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>套用</value>
  </data>
  <data name="KeepOriginalKey" xml:space="preserve">
    <value>保留前導鍵的原始表現</value>
  </data>
  <data name="KeepOriginalKeyToolTip" xml:space="preserve">
    <value>這要求 WinCompose 盡最大努力維持按鍵的原始表現。例如，仍維持 Alt-Tab 快鍵，即使 Alt 被用作前導鍵。</value>
  </data>
  <data name="InsertZwsp" xml:space="preserve">
    <value>於 Office 應用程式插入零寬空格字元</value>
  </data>
  <data name="InsertZwspToolTip" xml:space="preserve">
    <value>微軟 Office 應用程式於輸入萬國碼(unicode)字元時，有時會自動改變文件字型。此功能於萬國碼字元後插入一不可見字元，以修正此錯誤。</value>
  </data>
  <data name="EmulateCapsLock" xml:space="preserve">
    <value>用兩個 Shift 鍵模擬 Caps Lock</value>
  </data>
  <data name="EmulateCapsLockToolTip" xml:space="preserve">
    <value>如果 Caps Lock 被設成前導鍵，此鍵就不會有原始表現，而是改用 Shift + Caps Lock 去啟用大寫化。</value>
  </data>
  <data name="ShiftDisablesCapsLock" xml:space="preserve">
    <value>Shift 鍵停用 Caps Lock</value>
  </data>
  <data name="ShiftDisablesCapsLockToolTip" xml:space="preserve">
    <value>如果 Caps Lock 被設成前導鍵，此鍵就不會有原始表現，而是改用按 Shift  去關閉大寫化。</value>
  </data>
  <data name="CapsLockCapitalizes" xml:space="preserve">
    <value>Caps Lock 鍵總是使字母大寫輸出</value>
  </data>
  <data name="CapsLockCapitalizesToolTip" xml:space="preserve">
    <value>若啟用 Caps Lock，輸入像 “é” 之類的重音字母，則會輸出對應的大寫字母 “É”。</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>分類</value>
  </data>
  <data name="InSelectedCategories" xml:space="preserve">
    <value>於所選的分類</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>選項 — WinCompose</value>
  </data>
  <data name="ShowOptions" xml:space="preserve">
    <value>選項…</value>
  </data>
  <data name="TrayToolTip" xml:space="preserve">
    <value>WinCompose v{2} 於 {0} ({1} 按鍵系列)</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>按鍵系列 — WinCompose</value>
  </data>
  <data name="UserMacros" xml:space="preserve">
    <value>使用者定義的巨集</value>
  </data>
  <data name="DisabledToolTip" xml:space="preserve">
    <value>WinCompose 已停用</value>
  </data>
  <data name="KeyInsert" xml:space="preserve">
    <value>插入</value>
  </data>
  <data name="TestTyping" xml:space="preserve">
    <value>測試輸入</value>
  </data>
  <data name="Tweaks" xml:space="preserve">
    <value>調控</value>
  </data>
  <data name="Milliseconds" xml:space="preserve">
    <value>(毫秒)</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>關於</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下載 WinCompose {0}</value>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>關於 — WinCompose</value>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>程式設計</value>
  </data>
  <data name="Translators" xml:space="preserve">
    <value>翻譯</value>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>特別感謝</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>證書</value>
  </data>
  <data name="NeedRestart" xml:space="preserve">
    <value>WinCompose 得重新啟動，以使變更生效。</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>提報程式錯誤</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>說明</value>
  </data>
  <data name="UpdatesToolTip" xml:space="preserve">
    <value>有更新可用。</value>
  </data>
  <data name="UserDefinedSequencesEdit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="UserDefinedSequencesReload" xml:space="preserve">
    <value>重新載入</value>
  </data>
</root>
