<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutodetectLanguage" xml:space="preserve">
    <value>自动检测</value>
  </data>
  <data name="KeyLMenu" xml:space="preserve">
    <value>左 Alt 键</value>
  </data>
  <data name="KeyRMenu" xml:space="preserve">
    <value>右 Alt 键</value>
  </data>
  <data name="KeyLControl" xml:space="preserve">
    <value>左 Ctrl 键</value>
  </data>
  <data name="KeyRControl" xml:space="preserve">
    <value>右 Ctrl 键</value>
  </data>
  <data name="KeyLWin" xml:space="preserve">
    <value>左 Windows 键</value>
  </data>
  <data name="KeyRWin" xml:space="preserve">
    <value>右 Windows 键</value>
  </data>
  <data name="KeyCapital" xml:space="preserve">
    <value>大写锁定键</value>
  </data>
  <data name="KeyNumLock" xml:space="preserve">
    <value>数字锁定键</value>
  </data>
  <data name="KeyPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="KeyApps" xml:space="preserve">
    <value>菜单键</value>
  </data>
  <data name="KeyEscape" xml:space="preserve">
    <value>Esc 键</value>
  </data>
  <data name="KeyScroll" xml:space="preserve">
    <value>Scroll Lock</value>
  </data>
  <data name="KeySpace" xml:space="preserve">
    <value>空格键</value>
  </data>
  <data name="KeyReturn" xml:space="preserve">
    <value>回车键</value>
  </data>
  <data name="ShowSequences" xml:space="preserve">
    <value>显示序列…</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>重新开始</value>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>访问网站</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Sequences" xml:space="preserve">
    <value>序列</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索过滤器：</value>
  </data>
  <data name="ComposeKey" xml:space="preserve">
    <value>书写键：</value>
  </data>
  <data name="ComposeKeyToolTip" xml:space="preserve">
    <value>选择应该作为书写键的按键。</value>
  </data>
  <data name="ResetDelay" xml:space="preserve">
    <value>延迟：</value>
  </data>
  <data name="UnicodeInput" xml:space="preserve">
    <value>高级 Unicode 输入</value>
  </data>
  <data name="UnicodeInputToolTip" xml:space="preserve">
    <value>启用所有字符的 Unicode 输入，包括没有定义组合键的那些。例如，下列序列将输出字符 U+1A3F：书写键 U 1 A 3 F</value>
  </data>
  <data name="InvalidSequences" xml:space="preserve">
    <value>在无效序列</value>
  </data>
  <data name="CaseInsensitive" xml:space="preserve">
    <value>回落到不区分大小写的匹配</value>
  </data>
  <data name="CaseInsensitiveToolTip" xml:space="preserve">
    <value>如果输入的序列不存在，但只是大小写不同，自动纠正。</value>
  </data>
  <data name="DiscardOnInvalid" xml:space="preserve">
    <value>丢弃所有已输入字符</value>
  </data>
  <data name="DiscardOnInvalidToolTip" xml:space="preserve">
    <value>如果输入的序列不存在，丢弃所有已输入的字符。默认行为是输出像是书写键没有被按下时的字符。</value>
  </data>
  <data name="BeepOnInvalid" xml:space="preserve">
    <value>发出一声哔响</value>
  </data>
  <data name="BeepOnInvalidToolTip" xml:space="preserve">
    <value>如果输入的序列不存在，发出一次系统声音。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>界面语言：</value>
  </data>
  <data name="LanguageToolTip" xml:space="preserve">
    <value>选择 WinCompose 界面使用的语言。默认使用操作系统的语言。</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="KeepOriginalKey" xml:space="preserve">
    <value>保留原撰写键行为</value>
  </data>
  <data name="KeepOriginalKeyToolTip" xml:space="preserve">
    <value>这告知 WinCompose 尽量保留原有的按键功能。例如，Alt+Tab 热键将继续有效，即使 Alt 已被用作书写键。</value>
  </data>
  <data name="InsertZwsp" xml:space="preserve">
    <value>在 Office 应用中插入零宽空格</value>
  </data>
  <data name="InsertZwspToolTip" xml:space="preserve">
    <value>Microsoft Office 应用程序有时会在输入特定 Unicode 字符后动态更改文档字体。此功能将在 Unicode 字符后面插入一个不可见字符以避免此问题。</value>
  </data>
  <data name="EmulateCapsLock" xml:space="preserve">
    <value>使用两个 Shift 键模拟大写锁定键</value>
  </data>
  <data name="EmulateCapsLockToolTip" xml:space="preserve">
    <value>如果大写锁定键被用作书写键，该按键的原行为将变为不可用。此功能允许同时按下两个 Shift 键开启大写锁定。</value>
  </data>
  <data name="ShiftDisablesCapsLock" xml:space="preserve">
    <value>Shift 键禁用了大写锁定键</value>
  </data>
  <data name="ShiftDisablesCapsLockToolTip" xml:space="preserve">
    <value>如果大写锁定键被用作书写键，该按键的原行为将变为不可用。此功能允许按下 Shift 键关闭大写锁定。</value>
  </data>
  <data name="CapsLockCapitalizes" xml:space="preserve">
    <value>大写锁定状态始终锁定为大写字母</value>
  </data>
  <data name="CapsLockCapitalizesToolTip" xml:space="preserve">
    <value>当大写锁定开启时，输入输入一个带重音字母如“é”将始终输出大写形式的字母，此例即“É”。</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="InSelectedCategories" xml:space="preserve">
    <value>在选中分类</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>选项 — WinCompose</value>
  </data>
  <data name="ShowOptions" xml:space="preserve">
    <value>选项…</value>
  </data>
  <data name="TrayToolTip" xml:space="preserve">
    <value>WinCompose v{2} 在 {0} ({1} 序列)</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>序列 — WinCompose</value>
  </data>
  <data name="UserMacros" xml:space="preserve">
    <value>用户定义的宏</value>
  </data>
  <data name="DisabledToolTip" xml:space="preserve">
    <value>WinCompose 已禁用</value>
  </data>
  <data name="KeyInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="TestTyping" xml:space="preserve">
    <value>测试输入</value>
  </data>
  <data name="Tweaks" xml:space="preserve">
    <value>调整</value>
  </data>
  <data name="Milliseconds" xml:space="preserve">
    <value>(毫秒)</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载 WinCompose {0}</value>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>关于 WinCompose</value>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>程序</value>
  </data>
  <data name="Translators" xml:space="preserve">
    <value>翻译</value>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>特别感谢</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>许可协议</value>
  </data>
  <data name="NeedRestart" xml:space="preserve">
    <value>WinCompose 需要重新启动才能使一些更改生效。</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>报告缺陷</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="UpdatesToolTip" xml:space="preserve">
    <value>有更新可用。</value>
  </data>
</root>
